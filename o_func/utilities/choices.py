#!/usr/bin/env python3
# -*- coding: utf-8 -*-

""" Functions to dictate choices made in selecting different data sets

Created on Wed Nov 30 14:15:02 2022
@author: af
"""
import glob
from sys import platform

def winc(i):
    if platform == "win32":
        b = i.replace('\\','/')
    else:
        b = i
    return b


def UKC3_shelftmb(start_path):
    
    path = start_path + r'Original Data/UKC3/'
    
    options = ['owa', 'oa', 'ow', 'og']
    opt = ['1','2','3','4']

    user_input = ''
    
    input_message = "Pick an option:\n"
    
    for index, item in enumerate(options):
        input_message += f'{index+1}) {item}\n'
    
    input_message += 'Your choice: '
    
    while user_input.lower() not in opt:
        user_input = input(input_message)
    
    print('You picked: ' + user_input + r')'+ options[int(user_input)-1] + '\n')
    
    full_path = path + options[int(user_input)-1] + r'/shelftmb'
    return full_path

def points_path(start_path):
    path = start_path + r'modelling_DATA/kent_estuary_project/' + \
                        r'land_boundary/analysis/QGIS_shapefiles'
    files = []
    file_split = []
    file_length = []
    j = 0
    for filename in glob.glob(path + r'/*.csv'):
        filename = winc(filename)

        files.append(filename)
        file_split.append(filename.split('/')[-1])
        file_length+=str(j+1)
    
    options = file_split
 
    user_input = ''
    
    input_message = "Pick an option and type the number:\n"
    
    for index, item in enumerate(options):
        input_message += f'{index+1}) {item}\n'
    
    input_message += 'Your choice: '
    
    while user_input.lower() not in file_length:
        user_input = input(input_message)
    
    output = file_split[int(user_input)-1]

    print('You picked: ' + output + '\n')
    
    full_path = path + r'/' + output
    return full_path

def tim_at_point_choice(start_path):
    print('Select folder which was generated by \nPDF_from_points_map_file_generator')
    
    folder_path = start_path + r'modelling_DATA/kent_estuary_project/PDF_analysis/timeseries_at_points'
    paths = []
    j= 0
    j_list = []
    user_input = ''
    print('\n')
    input_message = "\nPick an option:\n"
    input_message += 'Your choice: '
    for i in glob.glob(folder_path + r'/*'):
        i = winc(i)
        j+=1
        dat = i.split('/')[-1]
        paths.append(i)
        print(str(j) + '.)' + dat)
        j_list.append(str(j))
  
    options = j_list
    
    while user_input.lower() not in options:
        user_input = input(input_message)
    
    new_path = paths[int(user_input)-1]
    
    print('You picked: ' + new_path.split('/')[-1] + '\n')
    return new_path

def all_choice(start_path):
    j = 0
    user_input = ''
    print('\n')
    print('Select 4 files, one each from ow,oa,owa and og')
    print('e.g 1,2,3,4 or 2,5,6,7 etc. ')
    input_message = "\nPick an option:\n"
    input_message += 'Your choice: '
    timeseries_path = start_path + r'modelling_DATA/kent_estuary_project/PDF_analysis/timeseries_at_points'
    files = []
    for file in glob.glob(timeseries_path + '/P*'):
        file = winc(file)

        j+=1
        files.append(file)
        print(str(j) + '.)' + file.split('/')[-1])
    us_input = []
    pick = ['\n1st Pick owa', '\n2nd Pick oa', '\n3rd Pick ow', '\n4th Pick og' ]
    for i in range(4):
        user_input = input(pick[i] + input_message)
        us_input.append(int(user_input))
    
    print('\nYou picked:')
    files_to_return = []
    for i in us_input:
        new_file = files[i-1]
        files_to_return.append(new_file)
        print(new_file .split('/')[-1])
        
    return files_to_return
        
def delft_file_chooser(start_path):
    
    files = start_path + \
        'modelling_DATA/kent_estuary_project/4.Delft_2019/2.Model_refinement/SCW_runs/kent_2.1.3'
    file = files + '/kent_31_merged_map.nc'
    return file

def pli_choice(start_path):
    j = 0
    print('\nSelecting ocean boundary locations based off pli file (lat/lon)')
    
    input_message = "\nPick an option:\n"
    input_message += 'Your choice: '
    path = start_path + 'modelling_DATA/kent_estuary_project/tidal_boundary/delft_3dfm_inputs/pli_files'
    files = []
    user_input = ''
    j_list = []
    for file in glob.glob(path + '/*'):
        file = winc(file)

        files.append(file)
        j+=1
        print(str(j) + '.)' + file.split('/')[-1])
        j_list.append(str(j))

    while user_input.lower() not in j_list:
        user_input = input(input_message)
    
    new_path = files[int(user_input)-1]
    
    print('You picked: ' + new_path.split('/')[-1] + '\n')
    return new_path

    
def boundary_choice(start_path):
    j = 0
    print('\nSelecting boundary points folder')
    
    input_message = "\nPick an option:\n"
    input_message += 'Your choice: '
    path = start_path + 'modelling_DATA/kent_estuary_project/tidal_boundary/delft_3dfm_inputs/4.og_ocean_only'
    files = []
    user_input = ''
    j_list = []
    for file in glob.glob(path + '/*'):
        file = winc(file)

        files.append(file)
        j+=1
        print(str(j) + '.)' + file.split('/')[-1])
        j_list.append(str(j))

    while user_input.lower() not in j_list:
        user_input = input(input_message)
    
    new_path = files[int(user_input)-1]
    
    print('You picked: ' + new_path.split('/')[-1] + '\n')
    return new_path

def scw_nc_choice(start_path,mother_folder):
    j = 0
    print('\nSelecting nc data folder and file')
    
    input_message = "\nPick an option:\n"
    input_message += 'Your choice: '
    path = start_path + 'modelling_DATA/kent_estuary_project' + mother_folder + '/SCW_runs'
    files = []
    user_input = ''
    j_list = []
    for file in glob.glob(path + '/*'):
        #print(file)
        file = winc(file)

        files.append(file)
        j+=1
        print(str(j) + '.)' + file.split('/')[-1])
        j_list.append(str(j))

    while user_input.lower() not in j_list:
        user_input = input(input_message)
    
    new_path = files[int(user_input)-1]
    
    for file in glob.glob(new_path + '/*.nc'):
        f = file
    
    name = new_path.split('/')[-1]           
    print('You picked: ' + name + '\n')
    return f, name # return the path to nc file rather than the folder
    
def sw_vid_data_variable_choice(start_path):
    j = 0
    print('\nChoose which data vars you wish to produce images and video for,')
    print('Select by entering 1,2,3 etc and type END to confirm selection')
    print('Type END to finish')
    
    input_message = "\nPick an option:\n"
    input_message += 'Your choice: '
    files = []
    j_list = ['Water Depth (m)','Sea Level (m)', 'Salinity (psu)']
    for file in j_list:
        file = winc(file)
        files.append(file)
        j+=1
        print(str(j) + '.)' + file.split('/')[-1])
        

    inputs = []
    while True: # looping forever
        data = input('Enter the data : ') # read the data from user to variable data
        if data == 'END': # if END is read then exit the loop
            break
        else:
            inputs.append(data) # otherwise, append the input to the list 
    final = [int(i)-1 for i in inputs]
    print(' You have selected:')
     # display the list.
    
    if len(final) == 3:
        print(files[final[0]])
        print(files[final[1]])
        print(files[final[2]])
    elif len(final) == 2:
        print(files[final[0]])
        print(files[final[1]])
    elif len(final) == 1:
        print(files[final[0]])

    return final # return index of bounds

import os

from o_func.utilities import winc # winc used in Choices

#%%
class DataChoice:
    def __init__(self, start_path, location_of_choices):
        self.start_path=start_path
        self.location_of_choices=location_of_choices
        
        
    # def select(self, path, selection): 
    #     generic_path_to_file = path + selection
        
        
    #     options = file_split
     
    #     user_input = ''
        
    #     input_message = "Select a directory by number:\n"
        
    #     for index, item in enumerate(options):
    #         input_message += f'{index+1}) {item}\n'
        
    #     input_message += 'Your choice: '
        
    #     while user_input.lower() not in file_length:
    #         user_input = input(input_message)
        
    #     output = file_split[int(user_input)-1]

    #     print('You picked: ' + output + '\n')
        
    #     full_path = path + r'/' + output
    #     return full_path
        
    # def dir_select(self, start_path, location_of_choices):
    #     path = start_path + location_of_choices
    #     def list_directories(directory_path):
    #         directories = [item for item in os.listdir(directory_path) if os.path.isdir(os.path.join(directory_path, item))]
    #         return directories
        
        
            
    #     self.select(path,list_directories(path))
        
        
    def file_select(self, start_path, location_of_choices,  data_type = 'default'):
        self.data_type = {
            'default': '',
            'csv': r'/*.csv',
            'pli' : r'/*.pli'
            # Add more named presets as needed...
        }
        
        path = start_path + location_of_choices
        generic_path_to_file = path + self.data_type[data_type] # formally csv etc
        
        files = []
        file_split = []
        file_length = []
        # print(generic_path_to_file)
        for j, filename in enumerate(glob.glob(generic_path_to_file)):
            f = winc(filename)

            files.append(f)
            file_split.append(f.split('/')[-1])
            file_length+=str(j+1)
        
        options = file_split
        user_input = ''
        
        input_message = "Select a file by number:\n"
        
        for index, item in enumerate(options):
            input_message += f'{index+1}) {item}\n'
        
        input_message += 'Your choice: '
        
        while user_input.lower() not in file_length:
            user_input = input(input_message)
        
        output = file_split[int(user_input)-1]

        print('You picked: ' + output + '\n')
        
        full_path = path + r'/' + output
        return full_path
        
        
    #def var_select(self):
        
    #def number_of_choice(self):
#%%      
if __name__ == '__main__':
    
    from o_func import opsys3; start_path = opsys3()
    
#%%
    directory_path = r'modelling_DATA/kent_estuary_project/' + \
                        r'land_boundary/analysis/QGIS_shapefiles'
                        
    directory_path2 = 'modelling_DATA/kent_estuary_project/tidal_boundary/delft_3dfm_inputs/pli_files'
    
    choice = DataChoice(start_path, directory_path)
    
    shelftmb_path = choice.file_select(start_path, directory_path, data_type = 'csv')
    scw_nc_path = choice.dir_select(start_path, directory_path2)
